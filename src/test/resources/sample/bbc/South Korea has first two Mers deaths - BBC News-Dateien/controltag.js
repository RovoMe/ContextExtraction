
/* Controltag Loader for BBC */
(function(){
  var debugging = /kxdebug/.test(location);
  var log = function() {
    // It's a flag, so if it's there, then it means debug.
    debugging && window.console && console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = document.createElement('script');
    node.async = true;  // This is just to be friendly.
    node.src = url;

    // Connect to both in case we're in older IE.
    node.onload = node.onreadystatechange = function() {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  // Mark the callback, so we don't load it twice on accident.
        callback();
      }
    };

    // Fetch the first script element, so we can insert the
    // controltag before it. There *must* be at least one
    // script element, or this code would never be called
    var sibling = document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  // ControlTag simply crashes when opening a website from Twitter browser on
  // iOS, temporarily disable CT when Twitter for iPhone is detected until they
  // fix this (works fine with other twitter client though)
  if (/Twitter for iPhone/.test(window.navigator.userAgent || '')) return;

  var config = {"partner_segment_map": {}, "context_terms": [], "tags": [{"content": "<script>\r\n(function(){\r\n\r\n\tvar kuid = Krux('get', 'user');\r\n\tif (kuid) {\r\n \tvar eyeota_url = '//ps.eyeota.net/match?bid=i0r4o4v&uid=' + kuid;\r\n\tvar i = new Image();\r\n\ti.src = eyeota_url;\r\n\t}\r\n\r\n  })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 99, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 67842, "name": "Eyeota - Marketplace & Branded provider tag"}, {"content": "<script>\r\n    (function() {\r\n        var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n            var kurl_params = encodeURIComponent(\"_kuid=\" + kuid + \"&_kdpid=2dd640a6-6ebd-4d4f-af30-af8baa441a0d&dlxid=<na_id>&dlxdata=<na_da>\");\r\n            var kurl = prefix + \"//beacon.krxd.net/data.gif?\" + kurl_params;\r\n            var dlx_url = '//r.nexac.com/e/getdata.xgi?dt=br&pkey=gpwn29rvapq62&ru=' + kurl;\r\n            var i = new Image();\r\n            i.src = dlx_url;\r\n        }\r\n    })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 8, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "data provider", "id": 34355, "name": "DataLogix provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: \"//loadm.exelator.com/load\",\r\n      data: {\r\n          _kdpid: 'e4942ff0-4070-4896-a7ef-e6a5a30ce9f9',\r\n          buid: kuid,\r\n          p: '204',\r\n          g: '270',\r\n          j: '0'\r\n      }});\r\n  }\r\n  })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 11, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 34358, "name": "eXelate Media provider tag"}, {"content": "<script type=\"text/javascript\">Krux('social.init');</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "internal": 1, "template_replacement": 1, "execution_results": null, "tier": 1, "library_tag_config": {}, "content_type": "html", "timing": "onload", "method": "document", "type": "library", "id": 29292, "name": "Krux Track Social"}, {"content": "<script>\r\n// this tag is intentionally blank\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 6, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 29293, "name": "Technographic Data provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 14, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 29294, "name": "Krux Geographic Data provider tag"}, {"content": "<img src=\"//adadvisor.net/adscores/g.js?sid=9212244187&_kdpid=2111c0af-fc3a-446f-ab07-63aa74fbde8e\" />", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 22, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 35500, "name": "AdAdvisor S2S provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 67, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 43697, "name": "WhoToo Partner Network provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 88, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 59095, "name": "Dun & Bradstreet provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 77, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 49625, "name": "Webbula provider tag"}, {"content": "<script>\r\n\r\n(function () {\r\n_ml = window._ml || {};\r\n_ml.pub = '748';\r\n_ml.redirect = '//beacon.krxd.net/usermatch.gif?partner=madisonlogic&partner_uid=[PersonID]';\r\nvar s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');\r\nmltag.type = 'text/javascript'; mltag.async = true;\r\nmltag.src = '//ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();\r\ns.parentNode.insertBefore(mltag, s);\r\n})();\r\n\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 37151, "name": "Madison Logic provider tag"}, {"content": "<script>\r\nvar krrain1 = document.getElementsByTagName('script');\r\nfor(var i = 0; i < krrain1.length; i++) {\r\n  if(krrain1[i].src.indexOf(\"doubleclick.net\") > 0) {\r\n   var krrain2 = krrain1[i].src.split(\"/\");\r\n   if (krrain2[3] != null && krrain2[3] != \"\"){\r\n     if (krrain2[3] == \"adj\"){\r\n      Krux('set', 'page_attr_adunit1', krrain2[4]);\r\n      var krrain3 = krrain2[5].split(\";\");\r\n      Krux('set', 'page_attr_adunit2', krrain3[0]);\r\n     }\r\n     else if (krrain2[4] == \"adj\") {\r\n      Krux('set', 'page_attr_adunit1', krrain2[5]);\r\n      var krrain3 = krrain2[6].split(\";\");\r\n      Krux('set', 'page_attr_adunit2', krrain3[0]);\r\n     }        \r\n   }\r\n    break;\r\n  }\r\n}\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 48940, "name": "DTC Ad Units on Legacy sites"}, {"content": "<script>\r\nKrux('scrape', { \"page_attr_keywords\": {meta_name: \"keywords\"}});\r\nKrux('scrape', { 'page_attr_url_path_1': {url_path: '1'}});\r\nKrux('scrape', { 'page_attr_url_path_2': {url_path: '2'}});\r\nKrux('scrape', { 'page_attr_url_path_3': {url_path: '3'}});\r\nKrux('scrape', { 'page_attr_url_path_4': {url_path: '4'}});\r\nKrux('scrape', { 'page_attr_url_path_5': {url_path: '5'}});\r\nKrux('set', 'page_attr_sections', typeof window._sf_async_config === 'object' && window._sf_async_config['sections']);\r\nKrux('set', 'page_attr_title', typeof window._sf_async_config === 'object' && window._sf_async_config['title']);\r\nKrux('set', 'page_attr_region', typeof window._sf_async_config === 'object' && window._sf_async_config['region']);\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 0, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 34352, "name": "DTC v1"}, {"content": "<script>\r\n\r\n(function() {\r\n    (new Image()).src = \"//apiservices.krxd.net/um?partner=vdna&r=\" + window.location.protocol + \"//e.visualdna.com/conversion&_kdpid=8f95f20d-4acf-43fc-9832-3f5174a166cc\";\r\n})();\r\n\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 35502, "name": "Visual DNA () provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n      var liveramp_url = 'https://idsync.rlcdn.com/379708.gif?partner_uid=' + kuid;\r\n      var i = new Image();\r\n      i.src = liveramp_url;     \r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "publisher", "id": 43208, "name": "LiveRamp"}, {"content": "Krux('scrape', { 'page_attr_description': {meta_name: 'Description'}});", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 0, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 44488, "name": "BBC Meta Description"}, {"content": "<script>\r\nKrux('set', 'page_attr_cb_title', typeof window._sf_async_config === 'object' && window._sf_async_config['title']);\r\nKrux('set', 'page_attr_cb_path', typeof window._sf_async_config === 'object' && window._sf_async_config['path']);\r\n\r\nKrux('scrape', { 'page_attr_google_ad.type': {js_global: \"google_ad.type\"}});\r\nKrux('scrape', { 'page_attr_google_ad.bidtype': {js_global: \"google_ad.bidtype\"}});\r\nKrux('scrape', { 'page_attr_google_ad.targeting_type': {js_global: \"google_ad.targeting_type\"}});\r\nKrux('scrape', { 'page_attr_google_ad.visible_url': {js_global: \"google_ad.visible_url\"}});\r\nKrux('scrape', { 'page_attr_scw_account': {js_global: \"s_account\"}});\r\nKrux('scrape', { 'page_attr_scw_site_section': {js_global: \"scw.prop7\"}});\r\nKrux('scrape', { 'page_attr_scw_ad_enabled': {js_global: \"scw.prop57\"}});\r\nKrux('scrape', { 'page_attr_scw_hour': {js_global: \"s_hour\"}});\r\nKrux('scrape', { 'page_attr_scw_day': {js_global: \"s_day\"}});\r\nKrux('scrape', { 'page_attr_scw_timepart': {js_global: \"s_timepart\"}});\r\n\r\n\r\nKrux('scrape', { 'page_attr_dart_tag': {dart: \"tag\"}});\r\nKrux('scrape', { 'page_attr_dart_page': {dart: \"page\"}});\r\nKrux('scrape', { 'page_attr_dart_referrer': {dart: \"referrer\"}});\r\nKrux('scrape', { 'page_attr_dart_domain': {dart: \"domain\"}});\r\nKrux('scrape', { 'page_attr_dart_headline': {dart: \"headline\"}});\r\nKrux('scrape', { 'page_attr_dart_is_sponsor': {dart: \"is_sponsor\"}});\r\nKrux('scrape', { 'page_attr_dart_is_mpu': {dart: \"is_mpu\"}});\r\n\r\nKrux('scrape', { 'page_attr_dfpZone': {js_global: \"dfpZone\"}});\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 43732, "name": "DTC v2"}, {"content": "<script>\r\nKrux('scrape', { 'page_attr_dart_ctype': {dart: \"ctype\"}});\r\nKrux('scrape', { 'page_attr_dart_news': {dart: \"news\"}});\r\nfor(i=0;i<document.getElementsByTagName('meta').length;i++) {\r\n  if(document.getElementsByTagName('meta')[i].getAttribute('name') == 'CPS_SECTION_PATH'){\r\n    var sec_hier = document.getElementsByTagName('meta')[i].getAttribute('content').split('/');\r\n    Krux('set', 'section', sec_hier[0]);\r\n    if(sec_hier.length > 1) {\r\n      Krux('set', 'subsection', sec_hier[1]);\r\n    }\r\n  }\r\n}\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 40186, "name": "BBC News DTC"}], "buckets": [], "publisher": {"uuid": "5d7aaa39-eeed-454f-bb7d-ecea38d770fc", "id": 12190, "name": "BBC"}, "controltag_options": {"async": "true", "render": true}, "site": {"id": 18886, "name": "BBC.com News"}, "realtime_segments": [], "dnt": null, "params": {"connector_host": "connector.krxd.net", "first_party_uid": false, "control_tag_load_sync": "false", "userData_host": "cdn.krxd.net", "disable_http_compression": false, "remove_kxhead": true, "supertag_requires_approval": "true", "control_tag_namespace": null, "control_tag_stats_prefix": null, "optimize_realtime_segments": false, "beacon_host": "beacon.krxd.net", "control_tag_pixel_throttle": "100", "store_realtime_segments": false, "user_id_cookie": null, "max_segments": null, "no_pii": 0, "recommend": false, "revenue_optimization": false, "context_terms": "false", "jslog_host": "jslog.krxd.net", "buckets": "", "site_level_supertag_config": "site", "max_slot_time": 1000, "services_host": "apiservices.krxd.net", "capture_leakage": true, "client_side_storage": "localStorage,cookie", "fingerprint": false, "config_source": 1, "control_tag_version": "stable", "capture_js_errors": "true", "datatag_version": "3", "dfp_premium": "true", "userdata_host": "cdn.krxd.net", "target_fingerprint": false}, "services": {"event": "//beacon.krxd.net/event.gif", "impression": "//beacon.krxd.net/ad_impression.gif", "stats": "//apiservices.krxd.net/stats", "log": "//jslog.krxd.net/jslog.gif", "optout": "//beacon.krxd.net/optout_check", "um": "//apiservices.krxd.net/um", "pixel": "//beacon.krxd.net/pixel.gif", "contentConnector": "//connector.krxd.net/content_connector/", "is_optout": "//beacon.krxd.net/optout_check", "set_optin": "//apiservices.krxd.net/consumer/optin", "social": "//beacon.krxd.net/social.gif", "set_optout": "//apiservices.krxd.net/consumer/optout", "userData": "//cdn.krxd.net/userdata/get", "data": "//beacon.krxd.net/data.gif", "userdata": "//cdn.krxd.net/userdata/get", "addSegment": "//cdn.krxd.net/userdata/add"}, "geo": {}, "segments": [], "confid": "JZTWpGsM"};

  // Wrap in a function and comment, then toString the func and replace
  // everything that's not the beginning or end of a JSON object, so we get a
  // string that's either empty or JSON.
  var esiGeo = String(function(){/*
    <esi:include src="/geoip_esi"/>
  */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = window.JSON.parse(esiGeo);
    } catch (__) {
      // Couldn't parse, so setting to {}
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }

  
  
  

  load('//cdn.krxd.net/ctjs/controltag.js.d6232fc8d93711e85e42a398232e8f00', function() {
    
    
    log('Loading krux configuration.');

    Krux('config', config);

    
  });
})();
