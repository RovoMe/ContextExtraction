
/* Controltag Loader for Washington Post */
(function(){
  var debugging = /kxdebug/.test(location);
  var log = function() {
    // It's a flag, so if it's there, then it means debug.
    debugging && window.console && console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = document.createElement('script');
    node.async = true;  // This is just to be friendly.
    node.src = url;

    // Connect to both in case we're in older IE.
    node.onload = node.onreadystatechange = function() {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  // Mark the callback, so we don't load it twice on accident.
        callback();
      }
    };

    // Fetch the first script element, so we can insert the
    // controltag before it. There *must* be at least one
    // script element, or this code would never be called
    var sibling = document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  // ControlTag simply crashes when opening a website from Twitter browser on
  // iOS, temporarily disable CT when Twitter for iPhone is detected until they
  // fix this (works fine with other twitter client though)
  if (/Twitter for iPhone/.test(window.navigator.userAgent || '')) return;

  var config = {"partner_segment_map": {}, "context_terms": [{"id": "It03V-vk", "value": "visa signature"}, {"id": "It03WASn", "value": "credit card"}, {"id": "It03WAvJ", "value": "nissan maxima"}, {"id": "I-C2we_V", "value": "healthcare"}, {"id": "I-C2wfMo", "value": "Affordable Care Act"}, {"id": "I-C2wfZg", "value": "Obamacare"}, {"id": "I-C2wfmm", "value": "Medicare"}, {"id": "I-C2wfzz", "value": "Medicaid"}, {"id": "I-C2wgA-", "value": "National Kidney Foundation"}, {"id": "I-C2wgOE", "value": "National Alliance on Mental Illness"}, {"id": "I-C2wgjm", "value": "Part D"}, {"id": "I-C2wgwe", "value": "Patient Protection"}], "tags": [{"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 88, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 62486, "name": "Dun & Bradstreet provider tag"}, {"content": "<script type=\"text/javascript\">Krux('social.init');</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "internal": 1, "template_replacement": 1, "execution_results": null, "tier": 1, "library_tag_config": {}, "content_type": "html", "timing": "onload", "method": "document", "type": "library", "id": 24879, "name": "Krux Track Social"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: \"//loadm.exelator.com/load\",\r\n      data: {\r\n          _kdpid: 'e4942ff0-4070-4896-a7ef-e6a5a30ce9f9',\r\n          buid: kuid,\r\n          p: '204',\r\n          g: '270',\r\n          j: '0'\r\n      }});\r\n  }\r\n  })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 11, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 23156, "name": "eXelate Media provider tag"}, {"content": "<script>\r\n// this tag is intentionally blank\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 6, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 22656, "name": "Technographic Data provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 14, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 22657, "name": "Krux Geographic Data provider tag"}, {"content": "<img src=\"//adadvisor.net/adscores/g.js?sid=9212244187&_kdpid=2111c0af-fc3a-446f-ab07-63aa74fbde8e\" />", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 22, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 23427, "name": "AdAdvisor S2S provider tag"}, {"content": "<script>\r\n    (function() {\r\n        var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n            var kurl_params = encodeURIComponent(\"_kuid=\" + kuid + \"&_kdpid=2dd640a6-6ebd-4d4f-af30-af8baa441a0d&dlxid=<na_id>&dlxdata=<na_da>\");\r\n            var kurl = prefix + \"//beacon.krxd.net/data.gif?\" + kurl_params;\r\n            var dlx_url = '//r.nexac.com/e/getdata.xgi?dt=br&pkey=gpwn29rvapq62&ru=' + kurl;\r\n            var i = new Image();\r\n            i.src = dlx_url;\r\n        }\r\n    })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 8, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "data provider", "id": 23429, "name": "DataLogix provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 67, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 43672, "name": "WhoToo Partner Network provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n      var liveramp_url = 'https://idsync.rlcdn.com/379708.gif?partner_uid=' + kuid;\r\n      var i = new Image();\r\n      i.src = liveramp_url;      \r\n  }\r\n})();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 21, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 23255, "name": "Acxiom S2S provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 142, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 71386, "name": "The Washington Post (via LiveRamp) provider tag"}, {"content": "<script>\r\n(function(){     \r\n\tvar kuid = window.Krux('get', 'user');\r\n\tif (kuid) {\r\n\t     var min = 1000000000;\r\n\t     var max = 9999999999;\r\n\t     var rand = Math.floor(Math.random() * (max - min)) + min;\r\n\t     var prefix = location.protocol == 'https:' ? \"https:\" :\"http:\";\r\n\t     var url = prefix \r\n\t               + '//t.mookie1.com/t/v1/event?migClientId=6726&migAction=krux&migSource=mig&migRandom='\r\n\t               + rand \r\n\t               +'&migParam1='\r\n\t               + kuid;\r\n\t     (new Image()).src = url;\r\n\t     \r\n\t}\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 45319, "name": "xaxis user match"}, {"content": "<script>\r\n// Using Meta keywords to produce page attribute keywords\r\nKrux('scrape', { \"page_attr_keywords\": {meta_name: \"keywords\"}});\r\n// Using Omniture prop34 to produce page attribute omniture_prop34\r\nKrux('set', 'page_attr_omniture_prop34', typeof window.s =='object' && window.s['prop34']);\r\n// Using Globals wp_section to produce page attribute wp_section\r\nKrux('scrape', { \"page_attr_wp_section\": {js_global: \"wp_section\"}});\r\n// Using Globals wp_subsection to produce page attribute wp_subsection\r\nKrux('scrape', { \"page_attr_wp_subsection\": {js_global: \"wp_subsection\"}});\r\n// Using Globals wp_content_category to produce page attribute wp_content_category\r\nKrux('scrape', { \"page_attr_wp_content_category\": {js_global: \"wp_content_category\"}});\r\n// Using Globals wp_meta_data.wt to produce page attribute wp_meta_data.wt\r\nKrux('scrape', { \"page_attr_wp_meta_data.wt\": {js_global: \"wp_meta_data.wt\"}});\r\n// Using Cookie rplm to produce page attribute cookie_rplm\r\nKrux('scrape', { \"page_attr_cookie_de\": {cookie: \"de\"}});\r\n// Using Globals wp_blogname to produce page attribute wp_blogname\r\nKrux('scrape', { \"page_attr_wp_blogname\": {js_global: \"wp_blogname\"}});\r\n// Using Globals wp_author to produce page attribute wp_author\r\nKrux('scrape', { \"page_attr_wp_author\": {js_global: \"wp_author\"}});\r\nKrux('scrape', { \"page_attr_wp_pvid\": {js_global: \"wp_pvid\"}});\r\n// Set section/subsection\r\n  Krux('set', {\r\n    section: Krux('get', 'page_attr_wp_section'),\r\n    subsection: Krux('get', 'page_attr_wp_subsection')\r\n  });\r\n// Using Omniture eVar62 to produce user attribute omniture_evar62\r\nKrux('set', 'user_attr_omniture_evar62', typeof window.s =='object' && window.s['eVar62']);\r\n// Set user attribute for subscriber type\r\n(function() {\r\n    if (window.s && window.s['prop65'] && window.s.prop65 !== 'none') {\r\n        var subType = window.s.prop65.replace(/[0-9]/g,'').split(',');\r\n        Krux('set','user_attr_sub_types', (subType.filter(function(e) { return e !== ''})));\r\n    }\r\n})();\r\n// Set Topics\r\n(function() {\r\n  if (window.wp_meta_data && window.wp_meta_data.clavis) {\r\n    var topics = []; \r\n    var i;\r\n    for(i = 0; i < wp_meta_data.clavis.topics.length; i++) {\r\n        topics[i] = wp_meta_data.clavis.topics[i].replace(/,/g,'');\r\n    }\r\n     \r\n    if (topics !=null && topics != \"\")  {\r\n    Krux('set', {'page_attr_topics': topics });\r\n    }\r\n  }\r\n})();\r\n// Set array of auxiliary values into context & keywords attr auxiliaries\r\n// 20141211 author mfisher\r\n(function() {\r\n    if (window.wp_meta_data && typeof window.wp_meta_data.clavis != 'undefined' && typeof window.wp_meta_data.clavis.auxiliary_names != 'undefined') {\r\n        var aux = [];\r\n        var q;\r\n        for (q = 0; q < wp_meta_data.clavis.auxiliary_names.length; q++) {\r\n            aux[q] = wp_meta_data.clavis.auxiliary_names[q].replace(/,/g, '');\r\n        }\r\n    }\r\n    if (aux != null && aux != \"\") {\r\n        Krux('set', {\r\n            'page_attr_aux': aux\r\n        });\r\n    }\r\n})();\r\n//Pull paywall info \r\n// 2014 11 17 coluzzi check TWP object (was throwing errors on page) \r\nif (typeof TWP != 'undefined') {\r\n    (function () {\r\n        if (TWP.Identity.paywall && TWP.Identity.paywall.pwresp) {\r\n            var mtfn = TWP.Identity.paywall.pwresp.mtfn;\r\n            var sub = TWP.Identity.paywall.pwresp.sub;\r\n            var mtr = TWP.Identity.paywall.pwresp.mtr;\r\n            if (mtfn != null) {\r\n                Krux('set', {\r\n                    'page_attr_mtfn': mtfn\r\n                });\r\n            }\r\n            if (sub != null) {\r\n                Krux('set', {\r\n                    'page_attr_sub': sub\r\n                });\r\n            }\r\n            if (mtr != null) {\r\n                Krux('set', {\r\n                    'page_attr_mtr': mtr\r\n                });\r\n            }\r\n        }\r\n    })();\r\n}\r\n\r\n// INI-996: Audiences attribute\r\n(function(){\r\n    var map = {\r\n        '0668': 'Inactive',\r\n        '7204': 'Active: Low Interest',\r\n        '0862': 'Active: Medium Interest',\r\n        '2467': 'Active: High Interest',\r\n        '6136': 'Center',\r\n        '8936': 'Left',\r\n        '9868': 'Right'\r\n    },\r\n    data = {};\r\n    data['page_attr_Audiences'] = [];\r\n    if( window.localStorage && window.localStorage.getItem ) {\r\n        var lcl = window.localStorage;\r\n        for( var key in map )\r\n            if( lcl.getItem( key ) == '1' )\r\n                data['page_attr_Audiences'].push( map[key]  );\r\n        data['page_attr_targeting_aux_map'] = lcl.getItem( 'targeting_aux_map' );\r\n    } else if( window.utils && window.utils.getCookie ) {\r\n        var utl = window.utils;\r\n        for( var key in map )\r\n            if( utl.getCookie( key ) )\r\n                data['page_attr_Audiences'].push( map[key]  );\r\n        data['page_attr_targeting_aux_map'] = utl.getCookie( 'targeting_aux_map' );\r\n    }\r\n    Krux( 'set', data );\r\n})();\r\n\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 23049, "name": "Krux Data Transfer Code"}, {"content": "", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "id": 66836, "name": "TubeMogul Custom Connect"}, {"content": "<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n            var kurl = prefix + '//beacon.krxd.net/usermatch.gif?adnxs_uid=$UID';\r\n            var appnexus_url = '//ib.adnxs.com/getuid?' + kurl\r\n            var i = new Image();\r\n            i.src = appnexus_url;\r\n        }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 66105, "name": "AppNexus Custom Connect"}, {"content": "<script type=\"text/javascript\">\r\n(function() {\r\n    (new Image()).src = '//sync.tidaltv.com/genericusersync.ashx?dpid=395';\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 69180, "name": "Videology Custom Connect"}, {"content": "<script>\r\n(function(){\r\n\r\n    window.pubId = 80738;\r\n    window.pixId = 279;\r\n    var protocol = window.location.protocol == 'https:' ? 'https:' : 'http:';\r\n\r\n    if (protocol == 'http:') {\r\n        var js = document.createElement('script');\r\n        js.type = 'text/javascript';\r\n        js.src = 'http://ads.pubmatic.com/AdServer/js/universalpixel.js';\r\n        document.getElementsByTagName('script')[0].appendChild(js);\r\n    }\r\n\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 68466, "name": "Pubmatic Usermatch Pixel"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid && typeof kuid != 'undefined') {\r\n      var prefix = location.protocol == 'https:' ? \"https\" :\"http\";\r\n      var r_url = prefix + '://cm.g.doubleclick.net/pixel'\r\n      var kurl = prefix + '://apiservices.krxd.net/um?partner=google&protocol=' + prefix + '&r=' + r_url;\r\n      var i = new Image();\r\n      i.src = kurl;\r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 68983, "name": "Google User Match"}, {"content": "<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        var prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\r\n        if (kuid) {\r\n           var url = '//servedby.flashtalking.com/map/?key=ad919e4f211cr5452615&url='\r\n                     + prefix\r\n                     + '//beacon.krxd.net/usermatch.gif?partner=flashtalking&partner_uid=[%FT_GUID%]';\r\n           (new Image()).src = url;\r\n        }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "publisher", "id": 67202, "name": "Flashtalking Usermatch Pixel"}, {"content": "<script>\r\n(function(){\r\n    var prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\r\n    var url = prefix + '//kr.ixiaa.com/C726AB29-0470-440B-B8D2-D552CED3A3DC/a.gif';\r\n    new Image().src = url;\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 28, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 23428, "name": "IXI Digital (Open Market) provider tag"}, {"content": "<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        var prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\r\n        if (kuid) {\r\n           var url = prefix + '//pix.btrll.com/partner/868092.png';\r\n           (new Image()).src = url;\r\n        }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 69010, "name": "BrightRoll User Match"}, {"content": "<script>\r\n(function(){\r\n\tvar prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n\tvar restUrl = '//tag.researchnow.com/t/beacon?pr=4821&ca=WP&pl=SITE&si=WP&adn=3&tt=3';\r\n\tvar completeUrl = prefix + restUrl;\r\n\tvar image = new Image();\r\n\timage.src= completeUrl;\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 42132, "name": "Research Now All Sites Except Mobile"}, {"content": "<script>\r\n\r\n(function () {\r\n_ml = window._ml || {};\r\n_ml.pub = '748';\r\n_ml.redirect = '//beacon.krxd.net/usermatch.gif?partner=madisonlogic&partner_uid=[PersonID]';\r\nvar s = document.getElementsByTagName('script')[0], cd = new Date(), mltag = document.createElement('script');\r\nmltag.type = 'text/javascript'; mltag.async = true;\r\nmltag.src = '//ml314.com/tag.aspx?' + cd.getDate() + cd.getMonth() + cd.getFullYear();\r\ns.parentNode.insertBefore(mltag, s);\r\n})();\r\n\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 47, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 43671, "name": "Madison Logic provider tag"}, {"content": "<script>\r\n(function()\r\n{ var i = new Image(); i.src = '//match.adsrvr.org/track/cmf/generic?ttd_pid=krux&ttd_tpi=1'; }\r\n)();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 68033, "name": "TradeDesk Custom Connect"}, {"content": "<script>\r\n    (function() {\r\n        var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n            var kurl_params = encodeURIComponent(\"_kuid=\" + kuid + \"&_kdpid=d7158cb7-a851-4e3c-b7ab-cc9e815b2399&dlxid=<na_id>&dlxdata=<na_da>\");\r\n            var kurl = prefix + \"//beacon.krxd.net/data.gif?\" + kurl_params;\r\n            var dlx_url = '//r.nexac.com/e/getdata.xgi?dt=br&pkey=gwjn34gwjnh86&ru=' + kurl;\r\n            var i = new Image();\r\n            i.src = dlx_url;\r\n        }\r\n    })();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 64967, "name": "Datalogix Custom User Sync"}, {"criteria": [{"operator": "contains", "name": "url", "value": "?kxtest"}], "content": "<script>\r\nvar UM = {\r\n    \r\n    PARTNER_NAME: 'fel',\r\n    PARTNER_UID_ATTRIBUTE: 'email',\r\n    _hash: Krux('require:sha1'),\r\n    protocol: (location.protocol == 'https:') ? 'https:' : 'http:',\r\n\r\n    canRun: function () {\r\n        return !!(window.FB && FB.getUserID && FB.api)\r\n    },\r\n\r\n    getPartnerUID: function (callback) {\r\n        var me = this;\r\n        window.FB.api(FB.getUserID(), function (res) {\r\n                var huid = null;\r\n                if (res && !res.error && res.hasOwnProperty(me.PARTNER_UID_ATTRIBUTE)) {\r\n                    huid = res[me.PARTNER_UID_ATTRIBUTE] ? me._hash(res[me.PARTNER_UID_ATTRIBUTE]) : null;\r\n                }\r\n                callback(huid);\r\n        });\r\n    },\r\n    \r\n    firePixel: function (uid) {\r\n        (new Image()).src = this.protocol\r\n                            +'//beacon.krxd.net/usermatch.gif?partner='\r\n                            + this.PARTNER_NAME\r\n                            + '&partner_uid='\r\n                            + uid;\r\n    },\r\n\r\n    start: function () {\r\n        var me = this;\r\n        if (!me.canRun()) {\r\n          return false\r\n        };\r\n        me.getPartnerUID(function(uid) {\r\n          if(uid) me.firePixel(uid);\r\n        });\r\n    },\r\n};\r\n\r\nsetTimeout(function() {\r\n    // h^ck for fbAsyncInit\r\n    UM.start();\r\n}, 5000);\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 64461, "name": "KX FEL Usermatch"}, {"content": "<script type=\"text/javascript\">\r\n(function() {\r\n    (new Image()).src = '//adadvisor.net/adscores/g.js?sid=9212244187&_kdpid=2111c0af-fc3a-446f-ab07-63aa74fbde8e';\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 68049, "name": "Neustar Custom Connect"}, {"content": "<script>\r\n// Using Globals commercialNode to produce page attribute commercialnode\r\nKrux('scrape', { \"page_attr_commercialnode\": {js_global: \"commercialNode\"}});\r\n\r\n(function() {\r\n  if (TWP && TWP.Identity && TWP.Identity.paywall && TWP.Identity.paywall.pwresp) {\r\n    var mtrct = TWP.Identity.paywall.pwresp.mtrct;\r\n     \r\n    if (mtrct !=null)  {\r\n    Krux('set', {'page_attr_mtrct': mtrct });\r\n    }\r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 23533, "name": "Krux Data Transfer Code - Commercial Node + new"}, {"content": "<script>(function() {\r\n  var _fbq = window._fbq || (window._fbq = []);\r\n  if (!_fbq.loaded) {\r\n    var fbds = document.createElement('script');\r\n    fbds.async = true;\r\n    fbds.src = '//connect.facebook.net/en_US/fbds.js';\r\n    var s = document.getElementsByTagName('script')[0];\r\n    s.parentNode.insertBefore(fbds, s);\r\n    _fbq.loaded = true;\r\n  }\r\n  _fbq.push(['addPixelId', '525550007567175']);\r\n})();\r\nwindow._fbq = window._fbq || [];\r\nwindow._fbq.push(['track', 'PixelInitialized', {}]);\r\n</script>\r\n<noscript><img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=525550007567175&amp;ev=NoScript\" /></noscript>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": [{"capture": false, "type": "popstate", "func": "function () {\n    j = i;\n    i = c.href;\n    e.push([\"track\", \"PixelInitialized\"]);\n}"}]}, "tier": 1, "internal": false, "content_type": "html", "criteria": [{"operator": "=", "name": "country", "value": "US"}, {"operator": "=", "name": "segment", "value": "opeznco9d"}], "timing": "onload", "method": "document", "type": "publisher", "id": 31738, "name": "MKTG: NOT Subs & Views>=7"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n      var liveramp_url = 'https://idsync.rlcdn.com/379708.gif?partner_uid=' + kuid;\r\n      var i = new Image();\r\n      i.src = liveramp_url;     \r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 5, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 64850, "name": "Test LiveRamp User Matching"}, {"content": "<script>\r\n(function(){\r\n    var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = 'https:';\r\n            var rurl = prefix + '//cms.analytics.yahoo.com/cms?partner_id=KRUX';\r\n            var i = new Image();\r\n            i.src = rurl;\r\n        }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 5, "internal": 1, "content_type": "html", "freq_cap": 1, "timing": "onload", "method": "document", "type": "publisher", "id": 64852, "name": "Test Yahoo! DataX"}, {"content": "<script>(function() {\r\n  var _fbq = window._fbq || (window._fbq = []);\r\n  if (!_fbq.loaded) {\r\n    var fbds = document.createElement('script');\r\n    fbds.async = true;\r\n    fbds.src = '//connect.facebook.net/en_US/fbds.js';\r\n    var s = document.getElementsByTagName('script')[0];\r\n    s.parentNode.insertBefore(fbds, s);\r\n    _fbq.loaded = true;\r\n  }\r\n  _fbq.push(['addPixelId', '525550007567175']);\r\n})();\r\nwindow._fbq = window._fbq || [];\r\nwindow._fbq.push(['track', 'PixelInitialized', {}]);\r\n</script>\r\n<noscript><img height=\"1\" width=\"1\" border=\"0\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=525550007567175&amp;ev=NoScript\" /></noscript>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 10, "internal": false, "content_type": "html", "criteria": [{"operator": "=", "name": "segment", "value": "oc3w0p1cy"}], "timing": "onload", "method": "document", "type": "publisher", "id": 30394, "name": "Facebook sample"}, {"content": "<!-- Facebook Conversion Code for Checkouts -->\r\n\r\n<script>(function() {\r\n\r\nvar _fbq = window._fbq || (window._fbq = []);\r\n\r\nif (!_fbq.loaded) {\r\n\r\nvar fbds = document.createElement('script');\r\n\r\nfbds.async = true;\r\n\r\nfbds.src = '//connect.facebook.net/en_US/fbds.js';\r\n\r\nvar s = document.getElementsByTagName('script')[0];\r\n\r\ns.parentNode.insertBefore(fbds, s);\r\n\r\n_fbq.loaded = true;\r\n\r\n}\r\n\r\n})();\r\n\r\nwindow._fbq = window._fbq || [];\r\n\r\nwindow._fbq.push(['track', '6014697289233', {'value':'0.01','currency':'USD'}]);\r\n\r\n</script>\r\n\r\n<noscript><img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?ev=6014697289233&amp;cd[value]=0.01&amp;cd[currency]=USD&amp;noscript=1\" /></noscript>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "criteria": [{"operator": "=", "name": "country", "value": "US"}], "timing": "onready", "method": "document", "type": "publisher", "id": 31265, "name": "FB Checkout"}, {"content": "<script>\r\n(function () {\r\n    function getCookie(c_name) {\r\n        var c_value = document.cookie;\r\n        var c_start = c_value.indexOf(c_name + \"=\");\r\n        if (c_start == -1) {\r\n            c_start = c_value.indexOf(c_name + \"=\");\r\n        }\r\n        if (c_start == -1) {\r\n            c_value = null;\r\n        } else {\r\n            c_start = c_value.indexOf(\"=\", c_start) + 1;\r\n            var c_end = c_value.indexOf(\";\", c_start);\r\n            if (c_end == -1) {\r\n                c_end = c_value.length;\r\n            }\r\n            c_value = unescape(c_value.substring(c_start, c_end));\r\n        }\r\n        return c_value;\r\n    }\r\n\r\n    var wpatc = getCookie(\"WPATC\");\r\n    if (wpatc != null && wpatc != \"\") {\r\n        var n = wpatc.split(\":\");\r\n        for (i = 0; i < n.length; i++) {\r\n            // get attribute pairs\r\n            var attribute = n[i].toUpperCase();\r\n            var split_value = attribute.split(\"=\");\r\n\r\n            switch (split_value[0]) {\r\n                case \"A\":\r\n                    // set attribute of A\r\n                    var value = split_value[1];\r\n                    Krux('set', {\r\n                        'user_attr_A': value\r\n                    });\r\n                    break;\r\n                case \"B\":\r\n                    // set attribute of B AND KEEP reading\r\n                    var value = split_value[1];\r\n                    if (value < 25) {\r\n                        Krux('set', {\r\n                            'user_attr_B_Job': value\r\n                        });\r\n                    } else if (value >= 25 && value <= 59) {\r\n                        Krux('set', {\r\n                            'user_attr_B_Responsibility': value\r\n                        });\r\n                    } else if (value >= 60 && value <= 99) {\r\n                        Krux('set', {\r\n                            'user_attr_B_Industry': value\r\n                        });\r\n                    } else if (value >= 100 && value <= 110) {\r\n                        Krux('set', {\r\n                            'user_attr_B_Size': value\r\n                        });\r\n                    }\r\n                   case \"D\":\r\n                    value = split_value[1];\r\n                    if (value >= 1 && value <= 5) {\r\n                    Krux('set', {\r\n                        'user_attr_D': value\r\n                    });\r\n                    break;\r\n                    }\r\n            }\r\n        }\r\n    }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onready", "method": "document", "type": "publisher", "id": 27248, "name": "WPATC Ingest"}, {"content": "<script>(function() {\r\n  var _fbq = window._fbq || (window._fbq = []);\r\n  if (!_fbq.loaded) {\r\n    var fbds = document.createElement('script');\r\n    fbds.async = true;\r\n    fbds.src = '//connect.facebook.net/en_US/fbds.js';\r\n    var s = document.getElementsByTagName('script')[0];\r\n    s.parentNode.insertBefore(fbds, s);\r\n    _fbq.loaded = true;\r\n  }\r\n  _fbq.push(['addPixelId', '525550007567175']);\r\n})();\r\nwindow._fbq = window._fbq || [];\r\nwindow._fbq.push(['track', 'PixelInitialized', {}]);\r\n</script>\r\n<noscript><img height=\"1\" width=\"1\" border=\"0\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=525550007567175&ev=NoScript\" /></noscript>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "criteria": [{"operator": "=", "name": "segment", "value": "of61en0yu,nu9nuucoe,ntod7r5ek,nyzorrn0q,nwn4wthb5"}], "timing": "onready", "method": "document", "type": "publisher", "id": 30581, "name": "MKTG Gov and Mil"}], "buckets": [], "publisher": {"uuid": "415dda7b-13ba-40f3-9a60-eb3ba310f160", "id": 11974, "name": "Washington Post"}, "controltag_options": {"async": "true", "render": true}, "site": {"id": 14227, "name": "Washington Post"}, "prioritized_segments": ["p4t3jq90f", "nu40mrodt", "ov05tibrh", "o9adnautp", "ov05ynk2y", "nmcwif3iy", "nv3wbrzua", "nv3wii1tt", "p44wtwdfp", "pmey58pzx", "n881e6bd0", "o37ewguj0", "o30n32aic", "nr8i4cziq", "o30nqvgvo", "o30m15xhm", "onzzsiicb", "ohduro4zg", "oypr8npxc", "peoik2xew", "pg1tlpf1r", "ns4f45fqg", "oypdm9cie", "nslj5f5ui", "oyoqgalbb", "oyop6uiyc", "nka000vpg", "oh98velyu", "oh986m12r", "pfkw5je8x", "oyhkuxted", "oyhj39zbh", "nmcwih052", "nmcwigqpf", "oyhjiwo8d", "nn2oqto66", "ng78o5120", "pgfuaz5ob", "nizqkg0gz", "nmcwiga1f", "nmcwigidj", "o7nio2r6n", "niv0g0yi7", "nmcwiffm4", "pivy92yql", "nmcwihn2m", "njqr3rlsc", "nmcwifd8j", "nizexw04v", "ntoboq1k5", "ohp0mz1gc", "nknaxeam8", "nizphkubo", "nmcwifuyo", "nmcwigr41", "nmcwifb0q", "nmcwih2f8", "nizspxrg4", "pp85xkmpj", "pzqp203a1", "njfarv02p", "ogtnc36ch", "py4m2vnr8", "nkaz6dzi4", "oxpzz3sg5", "nmcwihpq8", "nznj688mz", "nizgsrzre", "nknceqoj4", "n7n68hkzz", "njrt8io0s", "nley4unu3", "nlezpi42g", "npl71xosi", "ogtnh42r1", "nxb42ktg5", "nka0r3165", "nkznjpcww", "njqrbzas6", "nizfti7z9", "nstxofuh1", "nhbuddf78", "nkay78wok", "ohlx12bkc", "nps2kwa83", "onkqugi7u", "n9oi8vlqc", "oqoaud1gj", "nwn4wthb5", "oeiuizocd", "nvwljtfnx", "niv0ol064", "nizgegx3a", "nzud0rq2b", "odqggb931", "os28v6au3", "ovhfgrpa5", "ovh0y2z36", "ov06icq6a", "o1wv6mfsc", "o63hyi49b", "o9nyibm86", "o9n1kd5ew", "padynukjo", "o1wvx73u8", "pa1sdfzt2", "pa1u906pm", "pblp17ry2", "oc3xggnii", "oc3w9t9qy", "pbtpwkm1z", "pblp8gsr5", "pblqq8z9h", "pblqoung0", "pblqlg4ay", "pblqeizqr", "pblqbpi4q", "of61en0yu", "pcaanrnov", "pfjydrtrm", "pfkunmfbz", "pfnuhh0ff", "pgvd2zmg6", "pgvz7wah1", "pg3hrjia3", "pg3hwp4z9", "pg3h1y140", "pg8k0iyz6", "phnhft15r", "phnhjyx77", "phnhphy7q", "ph25uplvj", "pii6wg4mh", "pipaklr2e", "pjyg7l9yy", "pjyhbhqr4", "pjyheo6wt", "pjyhh7mt2", "pjyhk9qj4", "pjyhoswmi", "nstxk2kbu", "oc3w0p1cy", "pq1reaxa5", "ojsudc0ck", "nmcwiflvj", "phvhx4nk6", "pssfh54no", "ptoxt7iyn", "oglk998ar", "phvi9up37", "ogavqvbnj", "nsljeb1ef", "nscwurk1f", "nscwnnx4r", "pvzlrpn3w", "phvjehamn", "pwj4rglg5", "o7nijqijx", "pxf065lah", "oc3w6vcsf", "ns1ubr1ki", "pyblds0bc", "pynzxc8ax", "pyuefqk7q", "pyup7a9lu", "pzm2m65fy", "pz8b68ioa", "n7k6e6vh0", "p06pcedvc", "p06phydnh", "p06pls239", "p0635b7cq", "p29sn5vow", "p29s9vpn8", "p4gx6m9io", "p4gywvjg2", "p4gyqqq16", "p4gy8p9my", "p4sswi8ee", "p4sskdk9d", "p4stebtw0", "p4stwclyw", "p4st5mhug", "p4subhqbo", "p4su17tkr", "p4svk0w7u", "nmcwifphl", "pjygshs63", "o0oy9g7xr", "pjygwwx96", "nkfu63bjs", "oygp6ls41", "nizhn0oxy", "o3tcoc2qg", "nwsm55rws", "o6y85e48j", "nzrubsvw7", "o66mrbymd", "njqrvfxac", "nh304tyj9", "ov05m8ddz", "nka0l7q2e", "obzswvk15", "nivurvgqp", "n9cmfefqm", "nizrx7sno", "o8ifq0rb1"], "realtime_segments": [{"test": ["and", ["or", ["and", ["or", ["intersects", "$page_attr_wp_section", "[\"entertainment\"]"]]]]], "id": "niv0ol064"}], "dnt": null, "params": {"connector_host": "connector.krxd.net", "first_party_uid": false, "control_tag_load_sync": "false", "userData_host": "cdn.krxd.net", "disable_http_compression": false, "remove_kxhead": "0", "supertag_requires_approval": false, "control_tag_namespace": null, "control_tag_stats_prefix": null, "optimize_realtime_segments": false, "beacon_host": "beacon.krxd.net", "control_tag_pixel_throttle": "100", "store_realtime_segments": false, "user_id_cookie": null, "max_segments": "25", "no_pii": 0, "recommend": false, "revenue_optimization": false, "context_terms": "true", "jslog_host": "jslog.krxd.net", "buckets": "", "site_level_supertag_config": "site", "max_slot_time": 1000, "services_host": "apiservices.krxd.net", "capture_leakage": true, "client_side_storage": "localStorage,cookie", "fingerprint": "true", "config_source": 1, "control_tag_version": "stable", "capture_js_errors": "true", "datatag_version": "3", "dfp_premium": "true", "userdata_host": "cdn.krxd.net", "target_fingerprint": "false"}, "services": {"event": "//beacon.krxd.net/event.gif", "impression": "//beacon.krxd.net/ad_impression.gif", "stats": "//apiservices.krxd.net/stats", "log": "//jslog.krxd.net/jslog.gif", "optout": "//beacon.krxd.net/optout_check", "um": "//apiservices.krxd.net/um", "pixel": "//beacon.krxd.net/pixel.gif", "contentConnector": "//connector.krxd.net/content_connector/", "is_optout": "//beacon.krxd.net/optout_check", "set_optin": "//apiservices.krxd.net/consumer/optin", "social": "//beacon.krxd.net/social.gif", "set_optout": "//apiservices.krxd.net/consumer/optout", "userData": "//cdn.krxd.net/userdata/get", "data": "//beacon.krxd.net/data.gif", "userdata": "//cdn.krxd.net/userdata/get", "addSegment": "//cdn.krxd.net/userdata/add"}, "geo": {}, "segments": [], "confid": "IbWIJ0xh"};

  // Wrap in a function and comment, then toString the func and replace
  // everything that's not the beginning or end of a JSON object, so we get a
  // string that's either empty or JSON.
  var esiGeo = String(function(){/*
    <esi:include src="/geoip_esi"/>
  */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = window.JSON.parse(esiGeo);
    } catch (__) {
      // Couldn't parse, so setting to {}
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }

  
  
  

  load('//cdn.krxd.net/ctjs/controltag.js.d6232fc8d93711e85e42a398232e8f00', function() {
    
    
    log('Loading krux configuration.');

    Krux('config', config);

    
  });
})();
